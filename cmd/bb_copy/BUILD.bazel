load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_image_index")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//tools:container.bzl", "container_push_official")

go_library(
    name = "bb_copy_lib",
    srcs = ["main.go"],
    importpath = "github.com/buildbarn/bb-storage/cmd/bb_copy",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/blobstore/configuration",
        "//pkg/blobstore/replication",
        "//pkg/digest",
        "//pkg/grpc",
        "//pkg/program",
        "//pkg/proto/configuration/bb_copy",
        "//pkg/util",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

[
    go_binary(
        name = "bb_copy-{}".format(goarch),
        embed = [":bb_copy_lib"],
        pure = "on",
        goarch = goarch,
        goos = "linux",
        visibility = ["//visibility:public"],
    )
    for goarch in ["amd64", "arm64"]
]

[
    pkg_tar(
        name = "tar-{}".format(goarch),
        srcs = ["bb_copy-{}".format(goarch)],
        package_dir = "/app/cmd/bb_storage",
    )
    for goarch in ["amd64", "arm64"]
]

[
    oci_image(
        name = "image-{}".format(goarch),
        base = "@distroless_static",
        entrypoint = ["/app/cmd/bb_storage/bb_copy-{}".format(goarch)],
        tars = ["tar-{}".format(goarch)],
    )
    for goarch in ["amd64", "arm64"]
]

oci_image_index(
    name = "bb_copy_container",
    images = [
        ":image-arm64",
        ":image-amd64",
    ],
)

container_push_official(
    name = "bb_copy_container_push",
    component = "bb-copy",
    image = ":bb_copy_container",
)
